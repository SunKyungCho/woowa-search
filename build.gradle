buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8

    group = 'woowabros'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencyManagement {
        dependencies {
            dependency "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
            dependency "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
            dependency "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
        }
    }

    dependencies {
        compile 'com.github.kingbbode:spring-boot-custom-yaml-importer:0.1.0'
        compile "org.springframework.boot:spring-boot-configuration-processor"
        compile 'org.springframework.boot:spring-boot-starter'
        compile("org.projectlombok:lombok:${lombokVersion}")
        compileOnly("org.testcontainers:testcontainers:${testcontainerVersion}")
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.4'

        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
        testImplementation("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
        testImplementation("org.assertj:assertj-core:${assertjVersion}")

        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }
}